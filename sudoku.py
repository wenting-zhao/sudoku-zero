from mcts import MCTS
import random
import numpy as np
import sys
import copy

sudoku = np.asarray([[0, 0, 0, 0, 0, 0, 0, 1, 0],
                     [4, 0, 0, 0, 0, 0, 0, 0, 0],
                     [0, 2, 0, 0, 0, 0, 0, 0, 0],
                     [0, 0, 0, 0, 5, 0, 4, 0, 7],
                     [0, 0, 8, 0, 0, 0, 3, 0, 0],
                     [0, 0, 1, 0, 9, 0, 0, 0, 0],
                     [3, 0, 0, 4, 0, 0, 2, 0, 0],
                     [0, 5, 0, 1, 0, 0, 0, 0, 0],
                     [0, 0, 0, 8, 0, 6, 0, 0, 0]])

# sudoku = np.asarray([[ 5,  1,  9, 13,  2,  6, 10, 14,  3,  7, 11, 15,  4,  8, 12, 16],
#                      [ 2,  6, 10, 14,  1,  5,  9, 13,  4,  8, 12, 16,  3,  7, 11, 15],
#                      [ 3,  7, 11, 15,  4,  8, 12, 16,  1,  5,  9, 13,  2,  6, 10, 14],
#                      [ 4,  8, 12, 16,  3,  7, 11, 15,  2,  6, 10, 14,  1,  5,  9, 13],
#                      [ 1,  5, 13,  9,  6,  2, 14, 10,  7,  3, 15, 11,  8,  4, 16, 12],
#                      [ 6,  2, 14, 10,  5,  1, 13,  9,  8,  4, 16, 12,  7,  3, 15, 11],
#                      [ 7,  3, 15, 11,  8,  4, 16, 12,  5,  1, 13,  9,  6,  2, 14, 10],
#                      [ 8,  4, 16, 12,  7,  3, 15, 11,  6,  2, 14, 10,  5,  1, 13,  9],
#                      [ 9, 13,  1,  5, 10, 14,  2,  6, 11, 15,  3,  7, 12, 16,  4,  8],
#                      [10, 14,  2,  6,  9, 13,  1,  5, 12, 16,  4,  8, 11, 15,  3,  7],
#                      [11, 15,  3,  7, 12, 16,  4,  8,  9, 13,  1,  5, 10, 14,  2,  6],
#                      [12, 16,  4,  8, 11, 15,  3,  7, 10, 14,  2,  6,  9, 13,  1,  5],
#                      [13,  9,  5,  1, 14, 10,  6,  2, 15, 11,  7,  3, 16, 12,  8,  4],
#                      [14, 10,  6,  2, 13,  9,  5,  1, 16, 12,  8,  4, 15, 11,  7,  3],
#                      [15, 11,  7,  3, 16, 12,  8,  4, 13,  9,  5,  1, 14, 10,  6,  2],
#                      [16, 12,  8,  4, 15, 11,  7,  3, 14, 10,  6,  2, 13,  9,  5,  1]])

#sudoku = np.asarray([[ 5,  0,  0, 13,  2,  0,  0, 14,  0,  0,  0, 15,  4,  0,  0,  0],
#                    [ 2,  6, 10,  0,  1,  5,  0,  0,  0,  8,  0,  0,  0,  0,  0, 15],
#                    [ 3,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 10, 14],
#                    [ 4,  8,  0,  0,  0,  0,  0,  0,  0,  6, 10,  0,  0,  5,  0,  0],
#                    [ 0,  5,  0,  0,  0,  2, 14,  0,  0,  0, 15,  0,  0,  0, 16,  0],
#                    [ 6,  2,  0,  0,  0,  0, 13,  0,  0,  4, 16,  0,  0,  3, 15,  0],
#                    [ 7,  0,  0, 11,  0,  0,  0,  0,  5,  1,  0,  9,  6,  0, 14, 10],
#                    [ 0,  0,  0, 12,  0,  3,  0,  0,  6,  0,  0,  0,  5,  1, 13,  0],
#                    [ 0,  0,  1,  0, 10,  0,  0,  0, 11,  0,  0,  7, 12,  0,  4,  0],
#                    [ 0,  0,  2,  6,  9, 13,  1,  0,  0,  0,  0,  0, 11, 15,  0,  0],
#                    [11,  0,  0,  0, 12,  0,  4,  0,  9,  0,  0,  5,  0,  0,  0,  0],
#                    [ 0, 16,  0,  0,  0, 15,  3,  0,  0,  0,  2,  0,  0,  0,  1,  0],
#                    [13,  0,  5,  1,  0,  0,  0,  2, 15, 11,  7,  3,  0, 12,  0,  0],
#                    [ 0,  0,  0,  0, 13,  0,  0,  0, 16,  0,  0,  0,  0, 11,  0,  0],
#                    [ 0,  0,  7,  0, 16,  0,  0,  0,  0,  0,  5,  0, 14,  0,  6,  0],
#                    [ 0, 12,  0,  0,  0, 11,  7,  3,  0,  0,  0,  2,  0,  0,  0,  0]])

#sudoku = np.zeros((16, 16))

# all_sudoku = np.load("datasets/complete_25.npy")
# sudoku = all_sudoku[random.randrange(10000)]
# orig = copy.deepcopy(sudoku)

def update_sudoku(sudoku, prob=0.66):
    for (x, y), _ in np.ndenumerate(sudoku):
        if whether_remove(prob) is True:
            sudoku[x, y] = 0


def whether_remove(prob):
    return (True if random.uniform(0, 1) < prob else False)


def main():
    n = int(sys.argv[1])
    c_map = {9: 5, 16: 16, 25: 38}
    #update_sudoku(sudoku)
    mcts = MCTS(None, sudoku_size=n, rollout=100, ucb1_confidence=0)
    res = mcts(sudoku, n=100000)
    print(mcts.sample)

if __name__ == '__main__':
    main()
